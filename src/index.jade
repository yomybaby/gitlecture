doctype html
html
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
    title Git 제대로 써보기

    // build:css styles/styles.css
    //- Check out 'src/bower_components/prism/themes/' for available themes
    link(rel='stylesheet', type='text/css', href='bower_components/prism/themes/prism-tomorrow.css')
    link(rel='stylesheet', type='text/css', href='styles/main.css')
    link(rel='stylesheet', type='text/css', href='styles/ti.css')
    // endbuild

    link(rel="stylesheet", href="bower_components/octicons/octicons/octicons.css")
    link(rel="stylesheet", href="//maxcdn.bootstrapcdn.com/font-awesome/4.1.0/css/font-awesome.min.css")
  body
    - var smallTitle ='';
    article#main-article
      section(data-bespoke-state='reveal')
        //- span.small_title
        //-   i.fa.fa-warning
        //-   |  좌우키 혹은 스페이스키로 페이지 이동하세요.
        h1
          i.fa.fa-git
          |  제대로 써보기
        h3
          i.fa.fa-git
          |  이해와 활용
        h5 이종은
        h5 rev.20140624

      section(data-bespoke-state='emphatic')
        //- img(src="")
        h2 이종은
        h3 인디 개발자 - Yo Studio
        br
        ui.fa-ul
          li
            i.fa-li.fa.fa-angle-right
            | 한국 Titanium 개발자 모임 tidev.kr 운영
          li
            i.fa-li.fa.fa-angle-right
            | Titanium Certified Expert & Titan
        ul.badge_list
          li
            img(src='tidev.png', class="badge")
            &nbsp;
            img(src='tced.png', class="badge")
            &nbsp;
            img(src='titans.png', class="badge")
        p
          i.fa.fa-twitter
          a(href="https://twitter.com/yomybaby")  @yomybaby
          br
          i.fa.fa-github
          a(href="https://github.com/yomybaby")  yomybaby

      section(data-bespoke-state='stair')
        span.small_title 목차
        h2 
          //- i.fa.fa-list-alt
          | 목차
        ui.fa-ul
          li
            i.fa-li.fa.fa-file-text-o
            a.whitelink(href="#withfile")
              | 파일과 함께하는 일상
          li
            i.fa-li.fa.fa-wrench
            a.whitelink(href="#toolHistory")
              | 파일 관리 도구의 탄생
          li
            i.fa-li.fa.fa-git-square
            a.whitelink(href="#gitOverview")
              | 바로 알기
          li
            i.fa-li.fa.fa-camera-retro
            a.whitelink(href="#doGit")
              | 기록하기
          li
            i.fa-li.fa.fa-backward
            a.whitelink(href="#undo")
              | 되돌리기
          li
            i.fa-li.fa.fa-code-fork
            a.whitelink(href="#branch")
              | 가지치기(Branch)
          li
            i.fa-li.fa.fa-cloud-upload
            a.whitelink(href="#remote")
              | 원격 저장소
          li
            i.fa-li.fa.fa-group
            a.whitelink(href="#workflow")
              | Workflow

      section(data-bespoke-state='hello')
        span.small_title 여러분이 궁금합니다.
        h2 당신은 누구십니까?^^
        ul 
          li 어떤 일을 하시는 개발자?
          li Git을 어떻게 사용하고 계신가요?
          li 어떤 Workflow(Branch 전략)을 사용하시나요?
          li 
            i.fa.fa-desktop
            |  컴퓨터로 업무보시죠?
      
      - smallTitle = "파일과 함께하는 일상"
      section(data-bespoke-state='reveal',data-bespoke-hash="withfile")
        h1
          i.fa.fa-file-text.fa-3x
        h3= smallTitle
      section(data-bespoke-state='emphatic')
        span.small_title= smallTitle
        h2 
          i.fa.fa-user.pull-left
          | 일상 업무
        ui.fa-ul.bullet
          li.bullet
            i.fa-li.fa.fa-file-text-o 
            | 파일 생성
          li.bullet 
            i.fa-li.fa.fa-pencil-square-o
            | 파일 수정
          li.bullet
            i.fa-li.fa.fa-floppy-o
            | 파일 저장
          li.bullet
            i.fa-li.fa.fa-repeat.fa-lg
            i.fa.fa-pencil-square-o.fa-2x
            | 
            i.fa.fa-floppy-o.fa-2x

      section(data-bespoke-state='emphatic')
        span.small_title= smallTitle
        h2 
          i.fa.fa-warning.red
          |  긴급 상황 발생
        ui.fa-ul.bullet
          li.bullet
            i.fa-li.fa.fa-frown-o
            | 잘못된 내용으로 수정
          li.bullet
            i.fa-li.fa.fa-frown-o
            | 삭제
          li.bullet
            i.fa-li.fa.fa-frown-o
            | 파일 덮어 쓰기
          li.bullet
            i.fa-li.fa.fa-frown-o
            | 컴퓨터 분실

      section(data-bespoke-state='emphatic')
        span.small_title= smallTitle
        h2.bullet Q. 대비책이 있나요?
        //- h3.bullet A. 네 저는 이미 파일 잘 하고 있어요.
        img.bullet(src="filename.jpg") 

      section(data-bespoke-state='emphatic')
        span.small_title= smallTitle
        h2.bullet 우리는 누구? 인간!
        h3.bullet 인간은 도구를 사용하는 동물

      - smallTitle = '파일 관리 도구의 탄생'
      section(data-bespoke-state='reveal',data-bespoke-hash="toolHistory")
        h1
          i.fa.fa-wrench.fa-3x
        h3= smallTitle

      section(data-bespoke-state='emphatic')
        span.small_title= smallTitle
        h2 도구의 구분
        h3 Revision History Tracker :
        p
          i.fa.fa-google
          a(href="https://docs.google.com/a/yomybaby.com/document/d/1G-z2Q8_kAgv3qfBQ6te5c81ZdbjgMQ89vLLROb0R-dk/edit",target="_blank")  google 문서의 '업데이트 기록보기', 
          i.fa.fa-wordpress
          a(href="https://yomybaby.wordpress.com/wp-admin/revision.php?revision=304",target="_blank")  워드프레스 '리비전'
        br
        h3 Revision Control Software :
        p.bullet
          | Git, SVN, Perforce, Mecurial, CVS...
          img.w300(src="https://www.assembla.com/content/assets/img/content/products/features/vc-hosting.png")
        h4.bullet 둘의 차이가 뭐죠?

      section(data-bespoke-state='emphatic')
        h2 왜 사용하나요?
        ul.bullet.fa-ul
          li.bullet
            i.fa.fa-exclamation.fa-li
            | 무언가 잘못되었을 때 복구를 돕기 위해
          li.bullet
            i.fa.fa-exclamation.fa-li
            | 프로젝트 진행 중 과거의 어떤 시점으로 돌아갈 수 있게 하기 위해
          li.bullet
            i.fa.fa-exclamation.fa-li
            | 여러사람이 작업할 때 쉽게 합치기 위해
          li.bullet
            i.fa.fa-exclamation.fa-li
            | 누가 어떤 부분을 수정했는지 추적하기 위해
          li.bullet.red
            i.fa.fa-exclamation.fa-li
            | 안전하고 자유롭게 작업하기 위해
      section(data-bespoke-state='emphatic')
        span.small_title= smallTitle
        h2
          a(href="http://git-scm.com/") git-scm.com
        img.w500(src="Git.png")
      
      
      section(data-bespoke-state='emphatic')
        span.small_title= smallTitle
        h2.bullet SCM?
        h3.bullet Source Code Management
        br
        br
        h2.bullet 
          li.fa.fa-code
          |  Source Code?
        h3.bullet 네! 개발자를 위한 
          i.fa.fa-wrench
          |  도구입니다.


      section(data-bespoke-state='emphatic')
        span.small_title= smallTitle + " - git의 탄생"
        h2 리누스 토발즈
        img.w150(src="http://upload.wikimedia.org/wikipedia/commons/6/69/Linus_Torvalds.jpeg")
        br
        p.bullet
          i.fa.fa-linux.fa-3x.bullet
          | &nbsp;&nbsp;&nbsp;
          i.fa.fa-git.fa-3x.bullet
        p.small_font.bullet
          a(href="https://kldp.org/node/65588",target="_blank") Git을 만들게 된 이야기
          | , 
          a(href="http://git-scm.com/book/ko/%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0-%EC%A7%A7%EA%B2%8C-%EB%B3%B4%EB%8A%94-Git%EC%9D%98-%EC%97%AD%EC%82%AC",target="_blank") 짧게 보는 Git 역사

      - smallTitle="Git 바로 알기"
      section(data-bespoke-state='reveal',data-bespoke-hash="gitOverview")
        h1
          i.fa.fa-git.fa-3x
        h3= smallTitle

      section(data-bespoke-state='emphatic')
        span.small_title= smallTitle
        h2 설마?
        h3  git 그리고 github
        p
          i.fa.fa-git.fa-5x
          span.fa-stack.fa-5x.bullet(style="margin-top:-15%")
            | ==
            i.fa.fa-ban.fa-stack-2x.red.bullet
          i.fa.fa-github.fa-5x
      
      section(data-bespoke-state='whatisthis')
        span.small_title= smallTitle
        h2 앞으로 쏟아질 용어들
        br
        br
        br
        ul
          li Remote Repository, Local Repository
          li Staging Area, Index, Working Directory, Sanpshot,
          li Commit, Checkout, Reset, Merge,
          li HEAD, Branch, Tag,
          li Pull, Push, Fork
          li
            i.fa.fa-ellipsis-h

      section(data-bespoke-state='emphatic')
        span.small_title= smallTitle
        h2
          i.fa.fa-git
          |  왜 좋은가?
        ul.big_ul.fa-ul.bullet
          li.bullet
            i.fa-li.fa.fa-smile-o
            | 빠르다
          li.bullet
            i.fa-li.fa.fa-smile-o
            | 안전하다
          li.bullet
            i.fa-li.fa.fa-smile-o
            | 자유롭다

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h1
          i.fa.fa-desktop.fa-2x
        h4 빠르고 안전하고 자유로운 이유 1.
        h2
          span.light 거의
          |  모든 동작은
          br
          | 내 컴퓨터(Local)에서 동작한다.
      section(data-bespoke-state='emphatic')
        span.small_title= smallTitle
        h4 빠르고 안전하고 자유로운 이유 2.
        h2 분산버전 관리 시스템
        img.w400(src="https://www.atlassian.com/git/migration/pageSections/00/contentFullWidth/0/tabs/03/pageSections/0/contentFullWidth/0/content_files/file0/document/git-migration-centralized-vs-distributed.png")
      section(data-bespoke-state='emphatic')
        span.small_title= smallTitle
        h1
          i.fa.fa-eye.fa-2x
        h4 빠르고 안전하고 자유로운 이유 3.
        h2
          i.fa.fa-git
          | 은 당신이 한 
          span.light 거의
          |  모든 일을
          br
          | 알고 있다.

      
      - smallTitle="Git으로 기록하기"
      section(data-bespoke-state='reveal',data-bespoke-hash="doGit")
        h1
          i.fa.fa-camera-retro.fa-3x
        h3= smallTitle

      section(data-bespoke-state='emphatic',data-bespoke-hash="install")
        span.small_title= smallTitle
        h2 
          i.fa.fa-gear
          |  설치 먼저
        br
        ul.big_ul
          li
            | Git : 
            br
            a(href="http://git-scm.com/") git-scm.com
          li
            | Source Tree : 
            br
            a(href="http://www.sourcetreeapp.com/") sourcetreeapp.com
          li
            | Sublime Text : 
            br
            a(href="http://www.sublimetext.com/2") sublimetext.com/2
        h2
          i.fa.fa-github  Github.com 계정 만들기


      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h2 
          i.fa.fa-git
          |  저장소 만들기
        pre.dark
          code.language-bash.
            git init
        img.w300.bullet.brighter(src="http://strongloop.com/wp-content/uploads/2014/04/mind-blowing_1454.gif.pagespeed.ce.hxxM_pKi8A.gif")
        pre.small_font.dark.bullet
          code.language-bash
            :markup
              git init <directory>
              git init --bare <directory>

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h2 일단 파일 만들고 커밋해보자
        pre.dark
          code.language-bash
            :markup
              git add first.txt
              git commit -m "first commit"

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h2
          i.fa.fa-camera-retro.fa-2x.red
          br
          span.red Commit
          | 은 
          span.red Snapshot
          | 이다.

      section(data-bespoke-state='staging')
        span.small_title.bullet= smallTitle
        h2 
          span.red add
          | 는 
          span.green Stage 
          | 위로 올리는 것
        //img.w400(src="http://fc02.deviantart.net/fs70/f/2011/004/5/c/glee_stage_by_periru3-d36gik6.jpg")
      
      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h2 기록 절차
        img.w400(src="addcommit.png")
        pre.dark
          code.language-bash
            :markup
              git add first.txt
              git commit -m "first commit"
        pre.dark.bullet
          code.language-bash
            :markup
              git commit -a -m "first commit"

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h2 Commit
          br
          | 무엇이 생기고 어떤게 기록되나?
        ul.fa-ul
          li.bullet
            i.fa-li.fa.fa-camera-retro
            | Blob : 파일을 찰칵
          li.bullet
            i.fa-li.fa.fa-camera-retro
            | Tree object : 폴더구조를 찰칵
          li.bullet
            i.fa-li.fa.fa-camera-retro
            | Commit object : Tree의 hash와 Commit 부가정보를 담아 찰칵
          //- li.bullet
          //-   i.fa-li.fa.fa-hand-o-right
          //-   | Tag object : Commit을 가리키는 Pointer
          //- li.bullet
          //-   i.fa-li.fa.fa-hand-o-right
          //-   | Reference : Commit이나 Tag를 가리키는 Pointer

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        //- ul.fa-ul
        //-   li
        //-     i.fa-li.fa.fa-file-text-o
        //-     | README
        //-   li
        //-     i.fa-li.fa.fa-file-text-o
        //-     | src/hello.c
        img.w150(src="tree_example.png")
        br
        img.w400(src="http://wildlyinaccurate.com/wp-content/uploads/2014/05/tree-graph.png")

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h2 현재 상태 및 기록 살펴보기
        pre.dark
          code.language-bash
            :markup
              git status
              git log
              git log -p
              git reflog

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h2 파일 상태의 변화
        ul.fa-ul
          li.bullet
            i.fa-li.fa.fa-file-text-o
            | Untracked
          li.bullet
            i.fa-li.fa.fa-file-text-o
            | Staged
          li.bullet
            i.fa-li.fa.fa-file-text-o
            | Unmodified
          li.bullet
            i.fa-li.fa.fa-file-text-o
            | Modified
          

      - smallTitle="Git으로 되돌리기"
      section(data-bespoke-state='reveal',data-bespoke-hash="undo")
        h1
          i.fa.fa-backward.fa-3x
        h3= smallTitle

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h2 방법 1. Checkout
        p 전체 혹은 특정파일을 특정 커밋의 상태로 되돌린다.
        pre.dark
          code.language-bash
            :markup
              git checkout <commit>
              git checkout <commit> <file>
        
          //- li
          //-   i.fa-li.fa.fa-backward
          //-   | Branch를 체크아웃
      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h2 
          i.fa.fa-backward
          | &nbsp;
          i.fa.fa-file-o
          |  File을 Checkout
        ul.fa-ul
          li
            i.fa-li.fa.fa-angle-right
            strong 사용 상황 
            | : 특정 파일을 해당 커밋 시점의 파일 모습으로 바꾸고 싶을 때
          li.bullet
            i.fa-li.fa.fa-angle-right
            strong 일어나는 일
            |  : 특정 파일을 특정 커밋의 상태로 되돌리고 파일을 stage에 올린다. (Modified 사라짐)
      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h2 
          i.fa.fa-backward
          | &nbsp;
          i.fa.fa-camera-retro
          |  Commit/Branch로 Checkout
        ul.fa-ul
          li
            i.fa-li.fa.fa-angle-right
            strong  사용 상황
            |  : 모든 파일을 특정 커밋 시점의 모습으로 바꾸고 싶을 때
          li.bullet
            i.fa-li.fa.fa-angle-right
            strong  일어나는 일
            |  : 
            br 
            | 변경해야할 파일이 Modified 상태이면 Checkout이 진행이 되지 않고
            br 
            | 변경할 필요가 없는 파일은 Modifed 상태일 경우에는 Checkout이 진행되고 Modified는 유지된다.
       

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h2 방법 2. Revert
        p 특정 Commit을 되돌리는(Undo)하는 Commit을 생성한다.
        pre.dark
          code.language-bash
            :markup
              git revert <commit>

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h2 Checkout
        p 
          strong.red Commit 전 
          | 변경사항은 Checkout!
          br
          | 커밋을 만들지 않고 Working Directory의 일부 혹은 전체 내용이 바뀜
        h2 Revert
        p 
          strong.red Commit 후 
          | 커밋 내용을 통째로 되돌릴때는 Revert!
          br
          | 되돌리는 내용을 담은 커밋을 발생시킨다.
        
      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h2 
          i.fa.fa-warning.fa-2x.red
          br
          | 방법 3. Reset
        p 
          span.red 이용에 주의해야 함. 위험한(?) 명령어
          br
          | File을 Reset하는 것은 Unstaged 상태로 만드는 것
          br
          | Commit Reset은 현재 Branch를 해당 Commit으로 이동하는 것
        pre.dark
          code.language-bash
            :markup
              git reset <file>
              git reset <commit>

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h2 Revert vs. Reset
        img.w200(src="https://gp1.wac.edgecastcdn.net/8029C4/wac-small/wac/landing/git/tutorial/undoing-changes/pageSections/00/contentFullWidth/0/tabs/02/pageSections/01/contentFullWidth/00/imageBinary/git-tutorial_revert-vs-reset.png")

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h2 Checkout vs. Reset
        h3
          i.fa.fa-check
          |  Checkout
        p Branch는 안데려가요. HEAD만! Checkout! 다른 곳으로 이동할뿐
        h3
          i.fa.fa-undo
          |  Reset
        p 브랜치까지 같이! Reset! Branch를 뒤바꾸는 일.

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h2 기타 유용한 명령어
        h3 
          i.fa.fa-gift
          |  Clean
        pre.dark.small_font
          code.language-bash
            :markup
              git clean -f
        p Untracked File을 지움, .gitignore에 명시된 파일은 안지움
        
        h3 
          i.fa.fa-gift
          |  --ammend
        pre.dark.small_font
          code.language-bash
            :markup
              git commit --ammend -m "You can change commit message"
        p 방금 전 commit을 다시 하는 간단한 방법
        
        h3 
          i.fa.fa-gift
          |  Stash
        pre.dark.small_font
          code.language-bash
            :markup
              git stash
        p Commit 되지 않은 변경사항을 따로 저장해두고 다음에 적용할 때

      - smallTitle="Git으로 가지치기(Branch)"
      section(data-bespoke-state='reveal',data-bespoke-hash="branch")
        h1
          i.fa.fa-code-fork.fa-3x
        h3= smallTitle

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h3 Q. 원래 코드와 상관없이 개발을 진행하고 싶을 때 어떻게?
        ul.fa-ul
          li.bullet
            | A. 프로젝트 
            i.fa.fa-folder-open-o
            |  폴더를 통째로 복사한다? (ex.myproject_원본)
        h2.bullet 이제 수동작업은 그만!
        h3.bullet
          strong 빠르고 값싼 Branch는 Git 최고의 장점

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h2 
          i.fa.fa-code-fork
          |  Branch의 실체 공개!
        ul.fa-ul
          li.bullet
            i.fa-li.fa.fa-file-text-o
            | 파일 1개로 구성
          li.bullet
            i.fa-li.fa.fa-file-text-o
            | 파일명 == Branch 명
          li.bullet
            i.fa-li.fa.fa-file-text-o
            | 내용 : 가리키는 커밋의 Hash
          li.bullet
            i.fa-li.fa.fa-file-text-o
            | 용량 : 41 Byte
            
        h3.bullet 단순 포인터!

      section(data-bespoke-state='branch')
        span.small_title.bullet= smallTitle
        h2 이리로 가도 되고, 저리로 가도 되고
      
      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h2 
          i.fa.fa-code-fork
          |  Branch 명령어 사용법
        pre.dark
          code.language-bash
            :markup
              git branch
              git branch <branch>

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h2 
          i.fa.fa-check-circle-o 
          |  Checkout 명령어를
          br
          | 이용한 
          i.fa.fa-code-fork
          |  Branch 다루기
        pre.dark
          code.language-bash
            :markup
              git checkout -b <branch>
              git checkout <branch>

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h2 Branch와 비슷하지만 다른 것
          ul
            li HEAD : 현재 위치를 나타내는 포인트(branch나 commit을 가르킴)
            li tag

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h2 
          i.fa.fa-code-fork.fa-rotate-180
          |  Merge
          br
          | 이용한 Branch 다루기
        pre.dark
          code.language-bash
            :markup
              git merge <branch>
              git merge --no-ff <branch>

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h4 
          i.fa.fa-code-fork.fa-rotate-180
          |  Merge의 종류 1.
        h2 Fast-Forward Merge
        img.w200(src="https://gp1.wac.edgecastcdn.net/8029C4/wac-small/wac/landing/git/tutorial/git-branches/pageSections/00/contentFullWidth/0/tabs/02/pageSections/01/contentFullWidth/00/imageBinary/git-tutorial_merge-fast-forward.png")
      
      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h4 
          i.fa.fa-code-fork.fa-rotate-180
          |  Merge의 종류 2.
        h2 3-way merge
        img.w200(src="https://gp1.wac.edgecastcdn.net/8029C4/wac-small/wac/landing/git/tutorial/git-branches/pageSections/00/contentFullWidth/0/tabs/02/pageSections/01/contentFullWidth/02/imageBinary/git-tutorial_merge-three-way.png")

      - smallTitle="Git 원격 저장소"
      section(data-bespoke-state='reveal',data-bespoke-hash="remote")
        h1
          i.fa.fa-cloud-upload.fa-3x
        h3= smallTitle

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h2 Local? Remote?
        h3
          i.fa.fa-desktop.fa-2x
        img.w300(src="https://gp1.wac.edgecastcdn.net/8029C4/wac-small/wac/landing/git/tutorial/remote-repositories/pageSections/0/contentColumnTwo/0/imageBinary/git-tutorial-remote-repos.png",target="_blank")
        h3.bullet
          i.fa.fa-bitbucket.fa-2x
          | &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
          i.fa.fa-github-alt.fa-2x

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h2 
          i.fa.fa-cloud-upload.fa-2x
          br
          | Remote를 만들어서 Push해보자
        pre.dark
          code.language-bash
            :markup
              git remote
              git remote -v
              git remote add <name> <url>
              git remote rm <name>
              git remote rename <old-name> <new-name>
      
      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h4 
          i.fa.fa-star.red
          |  그 특별한 remote 이름
        h2 origin

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h2 
          i.fa.fa-cloud-download.fa-2x
          br
          | Fetch vs. Pull
        p.bullet Remote에 있는 내용를 전부 가져오는 행위는 동일
          br
          | Local branch랑 합치면 Pull (내 작업 Working Directory에 영향)

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h4 다른 사람이 이미 remote를 만든 경우
        h2 
          i.fa.fa-cloud-download.fa-2x
          br
          | Clone 해보자
        p Remote Repository를 내 local에다가 그대로 옮김
        pre.dark
          code.language-bash
            :markup
              git clone <repo>
              git clone <repo> <directory>

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h2 
          i.fa.fa-exclamation.fa-2x
          br
          | 이제 협업할 준비가 되었다!

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h2
          i.fa.fa-question.fa-4x
          br
          | 어떤 청책으로 협업 할 것인가?

      - smallTitle="Git Workflow"
      section(data-bespoke-state='reveal',data-bespoke-hash="workflow")
        h1
          i.fa.fa-group.fa-3x
        h3= smallTitle

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h4 Workflow = Branching 정책(전략)
        h2 다양한 정책들..
        ul.fa-ul
          li 
            i.fa.fa-group.fa-li
            | Centralized Workflow
          li
            i.fa.fa-group.fa-li
            | Feature Branch Workflow
          li
            i.fa.fa-group.fa-li
            | Gitflow Workflow
          li 
            i.fa.fa-group.fa-li
            | Forking Workflow

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle + " - Centralized Workflow"
        h4 
          i.fa.fa-group
          |  Branch 하나만 쓸께요.
        h2 Centralized Workflow
        div
          img.w150(src="https://www.atlassian.com/git/workflows/pageSections/00/contentFullWidth/0/tabs/00/pageSections/09/contentFullWidth/0/content_files/file1/document/git-workflow-svn-push-local.png")
          | &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
          img.w200.bullet(src="https://www.atlassian.com/git/workflows/pageSections/00/contentFullWidth/0/tabs/00/pageSections/09/contentFullWidth/0/content_files/file2/document/git-workflow-svn-managingconflicts.png")

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle + " - Centralized Workflow"
        h4 
          i.fa.fa-group
          |  Branch 하나만 쓸께요.
        h2 Centralized Workflow
        img.w300(src="https://www.atlassian.com/git/workflows/pageSections/00/contentFullWidth/0/tabs/00/pageSections/05/contentFullWidth/00/content_files/file1/document/git-workflow-svn-6.png")

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle + " - Centralized Workflow"
        h4 
          i.fa.fa-group
          |  개발 단위(기능) 별로 branch 만들께요.
        h2 Feature Branch Workflow
        img.w300(src="https://www.atlassian.com/git/workflows/pageSections/00/contentFullWidth/0/tabs/01/pageSections/07/contentFullWidth/0/content_files/file0/document/git-workflow-feature-branch-1.png")

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle + " - Feature Branch Workflow"
        h4 
          i.fa.fa-group
          |  Feature Branch Workflow : master는 항상 무결점!
        h2 그럼 섞어서 확인은 어디서??
        img.w300(src="https://www.atlassian.com/git/workflows/pageSections/00/contentFullWidth/0/tabs/01/pageSections/07/contentFullWidth/0/content_files/file0/document/git-workflow-feature-branch-1.png")

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle + " - Gitflow Workflow"
        h4 
          i.fa.fa-group
          |  개발서버(develop), 실서버(master) 구분할께요.
        h2 
          | Gitflow Workflow
        a(href="http://nvie.com/img/2009/12/Screen-shot-2009-12-24-at-11.32.03.png",target="_blank")
          img.w300(src="http://nvie.com/img/2009/12/Screen-shot-2009-12-24-at-11.32.03.png")

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle + " - Gitflow Workflow"
        h4 
          i.fa.fa-group
          |  개발서버(develop), 실서버(master) 구분할께요.
        h2 
          a(href="https://github.com/nvie/gitflow",target="_blank") 
            | Gitflow Workflow
        h3 매번 git branch, checkout, merger,
          br
          | branch 삭제 등을 해야한다고요?
        br
        p.bullet.red 네, 하지만 우리는 도구를 사용하는 동물!

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle + " - Forking Workflow"
        h4 
          i.fa.fa-group
          |  Remote Repository도 각각 따로 둘께요. 공식 Repository는 관리자만!
        h2 
          | Forking Workflow
        br
        i.fa.fa-star.fa-2x.blue
        img.w300(src="https://www.atlassian.com/git/workflows/pageSections/00/contentFullWidth/0/tabs/03/pageSections/0/contentFullWidth/0/content_files/file/git-workflows-forking.png")
        p
          span.green 개발자1
          | &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
          span.red 관리자
          | &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
          span.puple 개발자2

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle + " - Forking Workflow"
        h4 
          i.fa.fa-group
          |  개발자1, 개발자2가 완료했다는 것을 관리자에게 어떻게 말해주지?
        h2.bullet
          i.fa.fa-github  
          i.fa.fa-bitbucket  
          |  Pull Request
        p.bullet 내 Repository의 이 Branch를
          br
          | 공식 Repository의 그 Branch에 Pull해주세요.
        img.w400.bullet(src="https://www.atlassian.com/git/workflows/pageSections/00/contentFullWidth/0/tabs/04/pageSections/07/contentFullWidth/0/content_files/file0/document/pull-request-7.png")

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h2 Workflow를 위한 저장소 관리
        ul
          li Github
          li Bitbucket
          li Stash
          li Gitlab
          li Gitolite
          li Gitorious
          li tortoisegit
          li ..


      section(data-bespoke-state='success success2')
        h2 준비된 내용은 여기까지!
        h3.white 
          a(href="http://learnbranch.urigit.com",target="_blank") 점검 실습
          |  or QnA
        p.gray 기타 : rebase, hook, .bash_profile ..
        br
        h4.white
          | 본 자료는 
          br
          a.whitelink(href="http://yomybaby.github.io/gitlecture/") yomybaby.github.io/gitlecture
          | 에서 확인 가능합니다.

      section(data-bespoke-state='success')
        h1 감사합니다.

      section(data-bespoke-state='emphatic', data-bespoke-hash="ref")
        span.small_title.bullet 부록 1
        h2 참고 자료 및 학습자료
        ul.fa-ul
          li
            i.fa-li.fa.fa-link
            a(href="http://atlassian.com/git",target="_blank") Atlassian Git Tutorials
          li
            i.fa-li.fa.fa-link
            a(href="http://wildlyinaccurate.com/a-hackers-guide-to-git",target="_blank") A Hacker’s Guide to Git
          li
            i.fa-li.fa.fa-link
            a(href="http://git-scm.com/book/ko",target="_blank") Pro Git
          li
            i.fa-li.fa.fa-link
            a(href="http://pismute.github.io/whygitisbetter/",target="_blank") Why Git is Better then X
          li
            i.fa-li.fa.fa-link
            a(href="http://www.insightbook.co.kr/wp-content/uploads/2013/04/git-%EC%B9%98%ED%8A%B8%EC%8B%9C%ED%8A%B8%ED%94%84%EB%A6%B0%ED%8A%B8.pdf",target="_blank") Git 작업 흐름과 명령어 (Cheet Sheet)
            

    // build:js scripts/scripts.js
    script(src='bower_components/bespoke.js/dist/bespoke.min.js')
    script(src='bower_components/bespoke-keys/dist/bespoke-keys.min.js')
    script(src='bower_components/bespoke-touch/dist/bespoke-touch.min.js')
    script(src='bower_components/bespoke-bullets/dist/bespoke-bullets.min.js')
    script(src='bower_components/bespoke-scale/dist/bespoke-scale.min.js')
    script(src='bower_components/bespoke-hash/dist/bespoke-hash.min.js')
    script(src='bower_components/bespoke-progress/dist/bespoke-progress.min.js')
    script(src='bower_components/bespoke-state/dist/bespoke-state.min.js')
    script(src='bower_components/bespoke-forms/dist/bespoke-forms.min.js')
    script(src='bower_components/bespoke-tishadow/dist/bespoke-tishadow.js')
    script(src='bower_components/bespoke-run/dist/bespoke-run.js')
    //- script(src='bower_components/bespoke-jumpy/dist/bespoke-jumpy.js')
    //- script(src='bower_components/bespoke-dir/dist/bespoke-dir.js')
    script(src='bower_components/prism/prism.js')
    script(src='scripts/main.js')
    // endbuild
    script.
      var is_chrome = navigator.userAgent.toLowerCase().indexOf('chrome') > -1;
      if(!is_chrome) alert('크롬 브라우져로 보시길 권장합니다.');