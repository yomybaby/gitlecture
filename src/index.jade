doctype html
html
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
    title Git 제대로 써보기

    // build:css styles/styles.css
    //- Check out 'src/bower_components/prism/themes/' for available themes
    link(rel='stylesheet', type='text/css', href='bower_components/prism/themes/prism-tomorrow.css')
    link(rel='stylesheet', type='text/css', href='styles/main.css')
    link(rel='stylesheet', type='text/css', href='styles/ti.css')
    // endbuild

    link(rel="stylesheet", href="bower_components/octicons/octicons/octicons.css")
    link(rel="stylesheet", href="//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css")
  body
    div(id="fb-root")
    script.
      (function(d, s, id) {
        var js, fjs = d.getElementsByTagName(s)[0];
        if (d.getElementById(id)) return;
        js = d.createElement(s); js.id = id;
        js.src = "//connect.facebook.net/ko_KR/sdk.js#xfbml=1&appId=294097790751111&version=v2.0";
        fjs.parentNode.insertBefore(js, fjs);
      }(document, 'script', 'facebook-jssdk'));
    - var smallTitle ='';
    article#main-article
      section(data-bespoke-state='reveal')
        //- span.small_title.txt_L
        //-   i.fa.fa-warning
        //-   |  좌우 방향키로 페이지 이동하세요.(모바일은 좌우 swipe)
        //-   br
          //- <div class="fb-like" data-href="http://yomybaby.github.io/gitlecture" data-layout="button_count" data-action="like" data-show-faces="true" data-share="true"></div>
        h1
          i.fa.fa-git
          |  제대로 써보기
        h3
          i.fa.fa-git
          |  이해와 활용
        h5 이종은
        h5 ver.201501
        br
        

      section(data-bespoke-state='emphatic')
        //- img(src="")
        h2 이종은
        h3 Yo Studio
        ui.fa-ul
          li
            i.fa-li.fa.fa-angle-right
            | Web & App 컨설팅 / 교육 / 제작
          li
            i.fa-li.fa.fa-angle-right
            | Javascript 중독자 : titanium, backbone.js, node.js..
        ul
          li
            i.fa.fa-envelope
            a(href="mailto:jong@yostudio.kr")  jong@yostudio.kr
          li
            i.fa.fa-twitter
            a(href="https://twitter.com/yomybaby")  @yomybaby
          li
            i.fa.fa-github
            a(href="https://github.com/yomybaby")  yomybaby
          

      section(data-bespoke-state='emphatic')
        //- img(src="")
        h2 이종은
        h3 Titanium Developer
        br
        ui.fa-ul
          li
            i.fa-li.fa.fa-angle-right
            | 한국 Titanium 개발자 모임 tidev.kr 운영
          li
            i.fa-li.fa.fa-angle-right
            | Titanium Certified Expert & Titan
          li 
            i.fa-li.fa.fa-angle-right
            | NIPA 글로벌 오픈 프론티어 : Titanium 프로젝트
        ul.badge_list
          li
            img(src='tidev.png', class="badge")
            &nbsp;
            img(src='tced.png', class="badge")
            &nbsp;
            img(src='titans.png', class="badge")
      
      section(data-bespoke-state='hello')
        span.small_title 여러분이 궁금합니다.
        h2 인사 나눠요 ^^
        //- ul 
        //-   li 어떤 일을 하시는 개발자?
        //-   li Git을 어떻게(Workflow/Branch전략) 사용하고 계신가요?
        //-   li 
        //-     i.fa.fa-desktop
        //-     |  컴퓨터로 업무보시죠?

      section(data-bespoke-state='stair')
        span.small_title 목차
        h2 
          //- i.fa.fa-list-alt
          | 목차

          ui.fa-ul

            //- li
            //-   i.fa-li.fa.fa-file-text-o
            //-   a.whitelink(href="#withfile")
            //-     | 파일과 함께하는 일상
            //- li
            //-   i.fa-li.fa.fa-wrench
            //-   a.whitelink(href="#toolHistory")
            //-     | 파일 관리 도구의 탄생
            li
              i.fa-li.fa.fa-git-square
              a.whitelink(href="#gitOverview")
                | 맛보기
            li
              i.fa-li.fa.fa-camera-retro
              a.whitelink(href="#doGit")
                | Commit
            li
              i.fa-li.fa.fa-code-fork
              a.whitelink(href="#branch")
                | Branch
            //- li
            //-   i.fa-li.fa.fa-backward
            //-   a.whitelink(href="#undo")
            //-     | 되돌리기
            //- li
            //-   i.fa-li.fa.fa-cloud-upload
            //-   a.whitelink(href="#remote")
            //-     | 원격 저장소
            li
              i.fa-li.fa.fa-group
              a.whitelink(href="#remote")
                | 협업하기

      section(data-bespoke-state='emphatic')
        span.small_title Tip
        h1
          i.fa.fa-question
          |   질문은 
          br 
          | 언제
          br 
          | 어디서나
        h2
          | There are no stupid question.
      
      section(data-bespoke-state='emphatic')
        span.small_title Tip
        h1 
          i.fa.fa-star-half-o.fa-2x.red
        h2.bullet 본 강좌의 반쪽은
          br
          | 여러분의 질문으로 완성됩니다.
        br

        div.bullet 
          h3         
            i.fa.fa-heart.red
            |  REAL 후기
          | - 
          span.red 어떠한 질문이든 다 받아주시던 점
          | 이 좋았습니다.
          br
          | - 질문에 대한 
          span.red 답변을 상세히
          |  해주어서 좋았습니다.
          br
          | - 질의에 
          span.red  열정적으로
          |  응답하는 모습이 좋았습니다.

      - smallTitle = "git의 탄생"
      section(data-bespoke-state='reveal',data-bespoke-hash="withfile")
        h1
          i.fa.fa-birthday-cake.fa-3x
        h3= smallTitle
      section(data-bespoke-state='emphatic')
        span.small_title= smallTitle
        h2 
          i.fa.fa-user.pull-left
          | 파일과 함께 하는 업무
        ui.fa-ul.bullet
          li.bullet
            i.fa-li.fa.fa-file-text-o 
            | 파일 생성
          li.bullet 
            i.fa-li.fa.fa-pencil-square-o
            | 파일 수정
          li.bullet
            i.fa-li.fa.fa-floppy-o
            | 파일 저장
          li.bullet
            i.fa-li.fa.fa-repeat.fa-lg
            i.fa.fa-pencil-square-o.fa-2x
            | 
            i.fa.fa-floppy-o.fa-2x

      section(data-bespoke-state='emphatic')
        span.small_title= smallTitle
        h2 
          i.fa.fa-warning.red
          |  긴급 상황 발생
        ui.fa-ul.bullet
          li.bullet
            i.fa-li.fa.fa-frown-o
            | 잘못된 내용으로 수정
          li.bullet
            i.fa-li.fa.fa-frown-o
            | 삭제
          li.bullet
            i.fa-li.fa.fa-frown-o
            | 파일 덮어 쓰기
          li.bullet
            i.fa-li.fa.fa-frown-o
            | 컴퓨터 분실

      section(data-bespoke-state='emphatic')
        span.small_title= smallTitle
        h2.bullet Q. 대비책이 있나요?
        //- h3.bullet A. 네 저는 이미 파일 잘 하고 있어요.
        img.bullet(src="filename.jpg") 

      section(data-bespoke-state='emphatic')
        span.small_title= smallTitle
        h2.bullet 우리는 누구?
        h3.bullet 인간은 OO을 사용하는 동물

      //- - smallTitle = '파일 관리 도구의 탄생'
      //- section(data-bespoke-state='reveal',data-bespoke-hash="toolHistory")
      //-   h1
      //-     i.fa.fa-wrench.fa-3x
      //-   h3= smallTitle


      section(data-bespoke-state='emphatic')
        span.small_title= smallTitle
        h2 
          i.fa.fa-wrench
          |  파일 관리 도구들
        img.w500(src="https://www.assembla.com/content/assets/img/content/products/features/vc-hosting.png")
        //- h4.bullet 둘의 차이가 뭐죠?

      section(data-bespoke-state='emphatic')
        h2 왜 사용하나요?
        ul.bullet.fa-ul
          li.bullet
            i.fa.fa-exclamation.fa-li
            | 무언가 잘못되었을 때 복구를 돕기 위해
          li.bullet
            i.fa.fa-exclamation.fa-li
            | 프로젝트 진행 중 과거의 어떤 시점으로 돌아갈 수 있게 하기 위해
          li.bullet
            i.fa.fa-exclamation.fa-li
            | 여러사람이 작업할 때 쉽게 합치기 위해
          li.bullet
            i.fa.fa-exclamation.fa-li
            | 누가 어떤 부분을 수정했는지 추적하기 위해
          li.bullet.red
            i.fa.fa-exclamation.fa-li
            | 안전하고 자유롭게 작업하기 위해
      section(data-bespoke-state='emphatic')
        span.small_title= smallTitle
        h2
          a(href="http://git-scm.com/") git-scm.com
        img.w500(src="Git.png")
      
      
      section(data-bespoke-state='emphatic')
        span.small_title= smallTitle
        h2.bullet SCM?
        h3.bullet Source Code Management
        br
        br
        h2.bullet 
          li.fa.fa-code
          |  Source Code?
        h3.bullet 네! 개발자를 위한 
          i.fa.fa-wrench
          |  도구입니다.


      section(data-bespoke-state='emphatic')
        span.small_title= smallTitle
        h2 리누스 토발즈
        img.w150(src="http://upload.wikimedia.org/wikipedia/commons/6/69/Linus_Torvalds.jpeg")
        br
        p.bullet
          i.fa.fa-linux.fa-3x.bullet
          | &nbsp;&nbsp;&nbsp;
          i.fa.fa-git.fa-3x.bullet
        p.small_font.bullet
          a(href="https://kldp.org/node/65588",target="_blank") Git을 만들게 된 이야기
          | , 
          a(href="http://git-scm.com/book/ko/%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0-%EC%A7%A7%EA%B2%8C-%EB%B3%B4%EB%8A%94-Git%EC%9D%98-%EC%97%AD%EC%82%AC",target="_blank") 짧게 보는 Git 역사

      - smallTitle="git 맛보기"
      section(data-bespoke-state='reveal',data-bespoke-hash="gitOverview")
        h1
          i.fa.fa-git.fa-3x
        h3= smallTitle

      section(data-bespoke-state='emphatic')
        span.small_title= smallTitle
        h2 잠깐! 혹시?
        h3  git 그리고 github
        p.bullet
          i.fa.fa-git.fa-5x
          span.fa-stack.fa-5x(style="margin-top:-15%")
            | ==
          i.fa.fa-github.fa-5x
        i.fa.fa-ban.fa-stack.fa-5x.red.bullet(style="position:absolute;top:0;font-size:290px;top:-30px;")
      
      section(data-bespoke-state='whatisthis')
        span.small_title= smallTitle
        h2 앞으로 쏟아질 용어들
        br
        br
        br
        ul
          li Remote Repository, Local Repository
          li Staging Area, Index, Working Directory, Sanpshot,
          li Commit, Checkout, Reset, Merge,
          li HEAD, Branch, Tag,
          li Pull, Push, Fork
          li
            i.fa.fa-ellipsis-h

      section(data-bespoke-state='emphatic')
        h2.bullet 오늘 이것만은 제대 알고 가자!
        h1.bullet 1. Commit
        h1.bullet 2. Branch


      section(data-bespoke-state='emphatic')
        span.small_title= smallTitle
        h2
          i.fa.fa-git
          |  왜 좋은가?
        ul.big_ul.fa-ul.bullet
          li.bullet
            i.fa-li.fa.fa-smile-o
            | 빠르다
          li.bullet
            i.fa-li.fa.fa-smile-o
            | 안전하다
          li.bullet.red
            i.fa-li.fa.fa-smile-o
            | 자유롭다

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h1
          i.fa.fa-desktop.fa-2x
        h4 빠르고 안전하고 자유로운 이유 1.
        h2
          span.light 거의
          |  모든 동작은
          br
          | 내 컴퓨터(Local)에서 동작한다.
      section(data-bespoke-state='emphatic')
        span.small_title= smallTitle
        h4 빠르고 안전하고 자유로운 이유 2.
        h2 분산버전 관리 시스템
        img.w400(src="./images/cent_dist.svg")
      section(data-bespoke-state='emphatic')
        span.small_title= smallTitle
        h1
          i.fa.fa-eye.fa-2x
        h4 빠르고 안전하고 자유로운 이유 3.
        h2
          i.fa.fa-git
          | 은 당신이 한 
          span.light 거의
          |  모든 일을
          br
          | 알고 있다.

      - smallTitle="Git 주요 개념 맛보기"
      section(data-bespoke-state='reveal',data-bespoke-hash="examGit")
        h1
          i.fa.fa-cutlery.fa-3x
        h3= smallTitle

      section(data-bespoke-state='emphatic',data-bespoke-hash="install")
        span.small_title= smallTitle
        h1 
          i.fa.fa-gear
          |  Git 설치 및 사용
        br
        ul.big_ul
          li
            strong Git
            br
            a(href="http://git-scm.com/") git-scm.com
          li
            strong Source Tree 
            span.small_font (GUI Tool) 
            br
            a(href="http://www.sourcetreeapp.com/") sourcetreeapp.com
          li
            strong Sublime Text
            span.small_font (Text Editor) 
            br
            a(href="http://www.sublimetext.com/2") sublimetext.com/2
        //- h2
        //-   i.fa.fa-github  Github.com 계정 만들기

      //- section(data-bespoke-state='shark')
      //-   span.small_title= smallTitle
      //-   h1 
      //-     i.fa.fa-refresh
      //-     |  역지사지
      //-   h3.white git의 만드는 토발즈의 마음이 되어..
      
      section(data-bespoke-state='emphatic')
        h1 준비운동

      section(data-bespoke-state='emphatic')
        span.small_title= smallTitle
        <iframe src="//www.slideshare.net/slideshow/embed_code/41751708" width="595" height="485" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe> <div style="margin-bottom:5px"> <strong> <a href="//www.slideshare.net/yomybaby/assets-draw" title="Git의 Commit과 Branch" target="_blank">Git의 Commit과 Branch</a> </strong> from <strong><a href="//www.slideshare.net/yomybaby" target="_blank">JongEun Lee</a></strong> </div>


      //- section(data-bespoke-state='emphatic')
      //-   span.small_title= smallTitle
      //-   h2 나는 화가 그림을 그리다.
      
      //- section(data-bespoke-state='emphatic',style="transition:none !important")
      //-   span.small_title= smallTitle
      //-   h2 기록을 위해 사진으로 찍어두다 1

      //- section(data-bespoke-state='emphatic',style="transition:none !important")
      //-   span.small_title= smallTitle
      //-   h2 기록을 위해 사진으로 찍어두다 2

      //- section(data-bespoke-state='emphatic',style="transition:none !important")
      //-   span.small_title= smallTitle
      //-   h2 기록을 위해 사진으로 찍어두다 3

      //- section(data-bespoke-state='emphatic',style="transition:none !important")
      //-   span.small_title= smallTitle
      //-   h2 찍은 사진의 순서가 필요하다.

      //- section(data-bespoke-state='emphatic',style="transition:none !important")
      //-   span.small_title= smallTitle
      //-   h2 사진에 번호를 붙이다

      //- section(data-bespoke-state='emphatic',style="transition:none !important")
      //-   span.small_title= smallTitle
      //-   h2 왜 Git은 Hash로 붙였을까?

      //- section
      //-   h2.bullet Hash 중복이 발생하지 않나?
      //-   h3.bullet SHA1의 중복 발생 수학적 확률 : 2의 80제곱분의 1
      //-   pre.bullet 그냥 어느 날 동료가 전부 한순간에 늑대에게 물려 죽을 확률이 훨씬 더 높다.
      //-     br
      //-     | - Pro Git 중에서..

      //- section(data-bespoke-state='emphatic')
      //-   span.small_title= smallTitle
      //-   h2 모자가 맘에 안들어!

      //- section(data-bespoke-state='emphatic')
      //-   span.small_title= smallTitle
      //-   h2 여러 가지로 나뉘다.

      //- section(data-bespoke-state='emphatic',style="transition:none !important")
      //-   span.small_title= smallTitle
      //-   h2 가지를 뭐라고 부를 것인가?

      //- section(data-bespoke-state='emphatic',style="transition:none !important")
      //-   span.small_title= smallTitle
      //-   h2 가지에 의미(뜻)있는 이름을..    
      //-   h3 master, develop..  


      - smallTitle="Git으로 기록하기"
      section(data-bespoke-state='reveal',data-bespoke-hash="doGit")
        h1
          i.fa.fa-camera-retro.fa-3x
        h3= smallTitle

      


      section(data-bespoke-state='emphatic')
        span.small_title= smallTitle
        h2.bullet
          i.fa.fa-git
          |  저장소 만들기
        div.bullet
          pre.dark
            code.language-bash.
              git init
          img.w300.brighter(src="http://strongloop.com/wp-content/uploads/2014/04/mind-blowing_1454.gif.pagespeed.ce.hxxM_pKi8A.gif")
        //- pre.small_font.dark.bullet
        //-   code.language-bash
        //-     :markup
        //-       git init <directory>
        //-       git init --bare <directory>

      section(data-bespoke-state='emphatic')
        h2 .git 폴더
        img.w400(src="images/_git.jpg")
      section(data-bespoke-state='emphatic',style="transition:none !important")
        h2 .git 폴더
        img.w400(src="images/_git_filter.jpg")


      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h2 일단 파일 만들고 커밋해보자
        pre.dark
          code.language-bash
            :markup
              git add first.txt
              git commit -m "first commit"

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h2
          i.fa.fa-camera-retro.fa-2x.red
          br
          span.red Commit
          | 은 
          br
          span.red Snapshot
          | 을 저장하는 행위다.


      section(data-bespoke-state='staging')
        span.small_title.bullet= smallTitle
        h2 
          span.red add
          | 는 
          span.green Stage 
          | 위로 올리는 것
        //img.w400(src="http://fc02.deviantart.net/fs70/f/2011/004/5/c/glee_stage_by_periru3-d36gik6.jpg")

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h2
          i.fa.fa-camera-retro.fa-2x.red
          br
          span.red Stage
          | 는
          br
          | Commit하기 위해 준비하는
          span.red Snapshot
          | 이다.
      
      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h2 기록 절차
        img.w400(src="addcommit.png")
        pre.dark
          code.language-bash
            :markup
              git add first.txt
              git commit -m "first commit"
        pre.dark.bullet
          code.language-bash
            :markup
              git commit -a -m "first commit"

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h2 Commit
          br
          | 무엇이 생기고 어떤게 기록되나?
        ul.fa-ul
          li.bullet
            i.fa-li.fa.fa-camera-retro
            | Blob : 파일 내용
          li.bullet
            i.fa-li.fa.fa-camera-retro
            | Tree object : 폴더구조 (파일명, 하위폴더명)
            br
            | (파일 내용은 포함하지 않고 Blob의 Hash만 저장)
          li.bullet
            i.fa-li.fa.fa-camera-retro
            | Commit object : 최상위 폴더의 Tree hash와 Commit 부가정보 저장
          //- li.bullet
          //-   i.fa-li.fa.fa-hand-o-right
          //-   | Tag object : Commit을 가리키는 Pointer
          //- li.bullet
          //-   i.fa-li.fa.fa-hand-o-right
          //-   | Reference : Commit이나 Tag를 가리키는 Pointer

      section(data-bespoke-state='emphatic')
        span.small_title= smallTitle
        <iframe src="//www.slideshare.net/slideshow/embed_code/39666439?startSlide=9" width="595" height="485" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe> <div style="margin-bottom:5px"> <strong> <a href="//www.slideshare.net/GoAtlassian/dont-fear-the-branch-marcus-bertrand" title="Don&#x27;t Fear the Branch - Marcus Bertrand" target="_blank">Don&#x27;t Fear the Branch - Marcus Bertrand</a> </strong> from <strong><a href="//www.slideshare.net/GoAtlassian" target="_blank">Atlassian</a></strong> </div>

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        //- ul.fa-ul
        //-   li
        //-     i.fa-li.fa.fa-file-text-o
        //-     | README
        //-   li
        //-     i.fa-li.fa.fa-file-text-o
        //-     | src/hello.c
        img.w150(src="tree_example.png")
        br
        img.w400(src="http://wildlyinaccurate.com/wp-content/uploads/2014/05/tree-graph.png")

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h2 현재 상태 및 기록 살펴보기
        pre.dark
          code.language-bash
            :markup
              git status
              git log
              git log -p
              git reflog

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h2 파일 상태의 변화
        ul.fa-ul
          li.bullet
            i.fa-li.fa.fa-file-text-o
            | Untracked
          li.bullet
            i.fa-li.fa.fa-file-text-o
            | Staged
          li.bullet
            i.fa-li.fa.fa-file-text-o
            | Unmodified
          li.bullet
            i.fa-li.fa.fa-file-text-o
            | Modified
        p.bullet (Keynote 추가 설명)


      section(data-bespoke-state='emphatic')
        span.small_title.bullet. 정리 실습 1
        h2 커밋 해봅시다!
        p CLI와 Source Tree 에서 해보자. 
          br
          i.fa.fa-warning.red  
          | 앞서가진 마세요! 일단 지금까지 배운 것만
        pre.dark
          code.language-bash.
            git init
            git add FILENAME
            git commit -m "COMMIT_MESSAGE"
            git status
            git log

      - smallTitle="Git으로 가지치기(Branch)"
      section(data-bespoke-state='reveal',data-bespoke-hash="branch")
        h1
          i.fa.fa-code-fork.fa-3x
        h3= smallTitle

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h3 Q. 원래 코드와 상관없이 개발을 진행하고 싶을 때 어떻게?
        ul.fa-ul
          li.bullet
            | A. 프로젝트 
            i.fa.fa-folder-open-o
            |  폴더를 통째로 복사한다? (ex.myproject_원본)
        h2.bullet 이제 수동작업은 그만!
        h3.bullet
          strong 
            span.red 빠르고 값싼 Branch
            | 는 Git 최고의 장점

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h2 
          i.fa.fa-code-fork
          |  Branch의 실체 공개!
        ul.fa-ul
          li.bullet
            i.fa-li.fa.fa-file-text-o
            | 파일 1개로 구성
          li.bullet
            i.fa-li.fa.fa-file-text-o
            | 파일명 == Branch 명
          li.bullet
            i.fa-li.fa.fa-file-text-o
            | 내용 : 가리키는 커밋의 Hash
          li.bullet
            i.fa-li.fa.fa-file-text-o
            | 용량 : 41 Byte
            
        h3.bullet 단순 포인터! 겁나 싸죠?
      
      section(data-bespoke-state='emphatic')
        <iframe src="//www.slideshare.net/slideshow/embed_code/39666439?startSlide=25" width="595" height="485" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe> <div style="margin-bottom:5px"> <strong> <a href="//www.slideshare.net/GoAtlassian/dont-fear-the-branch-marcus-bertrand" title="Don&#x27;t Fear the Branch - Marcus Bertrand" target="_blank">Don&#x27;t Fear the Branch - Marcus Bertrand</a> </strong> from <strong><a href="//www.slideshare.net/GoAtlassian" target="_blank">Atlassian</a></strong> </div>

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h2 
          i.fa.fa-code-fork
          |  Branch 명령어 사용법
        pre.dark
          code.language-bash
            :markup
              git branch
              git branch <branch>

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h2 
          i.fa.fa-check-circle-o 
          |  Checkout 명령어를
          br
          | 이용한 
          i.fa.fa-code-fork
          |  Branch 다루기
        pre.dark
          code.language-bash
            :markup
              git checkout -b <branch>
              git checkout <branch>

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h2 Branch와 비슷하지만 다른 것
        ul.fa-ul
          li
            i.fa.fa-li.fa-tag
            | tag : 특정 위치를 나타내는 포인트(commit을 가리킴)
          li 
            i.fa.fa-li.fa-crosshairs
            | HEAD : 현재 위치를 나타내는 포인트(branch나 commit을 가리킴)
        br
        h3.bullet 성격 정리..
        ul.fa-ul.small_title.bullet
          li
            i.fa.fa-li.fa-tag
            | tag : 고정
          li 
            i.fa.fa-li.fa-code-fork
            | branch : 반고정
          li
            i.fa.fa-li.fa-crosshairs
            | HEAD : 고정 아님
      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h2 
          i.fa.fa-code-fork.fa-rotate-180
          |  Merge
          br
          | 이용한 Branch 다루기
        pre.dark
          code.language-bash
            :markup
              git merge <branch>
              git merge --no-ff <branch>

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h4 
          i.fa.fa-code-fork.fa-rotate-180
          |  Merge의 종류 1.
        h2 Fast-Forward Merge
        img(src="./images/07.svg")
      
      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h4 
          i.fa.fa-code-fork.fa-rotate-180
          |  Merge의 종류 2.
        h2 3-way merge
        img.w800(src="./images/08.svg")


      section(data-bespoke-state='emphatic')
        span.small_title.bullet. 정리 실습 2
        h2 Branch 생성과 Merge 해봅시다!
        p Fast-Forward Merge와 3-way Merge 두가지 모두 해보기
          br
          i.fa.fa-warning.red  
          | Merge의 주체 Brach로 먼저 Checkout해야함을 주의
        p TODO: 어떤모양이 될지 제시해줄 그림 두개 필요
        pre.dark
          code.language-bash.
            git branch NEW_BRANCH_NAME
            git checkout BRANCH_NAME
            git checkout -b NEW_BRANCH_NAME
            git merge TARGET_BRANCH_NAME
            git add FILENAME
            git commit -m "COMMIT_MESSAGE"

      - smallTitle="Git으로 되돌리기"
      section(data-bespoke-state='reveal',data-bespoke-hash="undo")
        h1
          i.fa.fa-backward.fa-3x
        h3= smallTitle

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h2 방법 1. Checkout
        p 전체 혹은 특정파일을 특정 커밋의 상태로 되돌린다.
        pre.dark
          code.language-bash
            :markup
              git checkout <commit>
              git checkout <commit> <file>

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h2 방법 2. Revert
        p 특정 Commit을 되돌리는(Undo)하는 Commit을 생성한다.
        pre.dark
          code.language-bash
            :markup
              git revert <commit>

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h2 Checkout
        p 
          strong.red Commit 전 
          | 변경사항은 Checkout!
          br
          | 커밋을 만들지 않고 Working Directory의 일부 혹은 전체 내용이 바뀜
        h2 Revert
        p 
          strong.red Commit 후 
          | 커밋 내용을 통째로 되돌릴때는 Revert!
          br
          | 되돌리는 내용을 담은 커밋을 발생시킨다.
        
      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h2 
          i.fa.fa-warning.fa-2x.red
          br
          | 방법 3. Reset
        p 
          span.red 이용에 주의해야 함. 위험한(?) 명령어
          br
          | File을 Reset하는 것은 Unstaged 상태로 만드는 것
          br
          | Commit Reset은 현재 Branch를 해당 Commit으로 이동하는 것
        pre.dark
          code.language-bash
            :markup
              git reset <file>
              git reset <commit>

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h2 Revert vs. Reset
        img(src="./images/revert_vs_reset.svg")

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h2 Checkout vs. Reset
        h3
          i.fa.fa-check
            :markup
              Checkout <commit>
        p HEAD만 다른 곳으로 이동할뿐
        h3
          i.fa.fa-undo
            :markup
              Reset <commit>
        p Branch와 Head가 다른 곳으로 이동! Branch의 기록을 뒤바꾸는 일.

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h2 기타 유용한 명령어
        pre.dark.small_font
          code.language-bash
            :markup
              git clean -f
        p 
          i.fa.fa-gift
          strong  clean
          | : Untracked File을 지움, .gitignore에 명시된 파일은 안지움
        br
        pre.dark.small_font
          code.language-bash.
            git commit <strong>--ammend</strong> -m "You can change commit message"
        p 
          i.fa.fa-gift 
          strong  ammend
          | : 방금 전 commit을 다시 하는 간단한 방법
        br
        pre.dark.small_font
          code.language-bash
            :markup
              git stash
        p 
          i.fa.fa-gift 
          strong  stash
          | : Commit 되지 않은 변경사항을 따로 저장해두고 다음에 적용할 때

      
      - smallTitle="Git 원격 저장소"
      section(data-bespoke-state='reveal',data-bespoke-hash="remote")
        h1
          i.fa.fa-cloud-upload.fa-3x
        h3= smallTitle

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h2 Local? Remote?
        h3
          i.fa.fa-github.fa-2x.blue
        img.w300(src="https://gp1.wac.edgecastcdn.net/8029C4/wac-small/wac/landing/git/tutorial/remote-repositories/pageSections/0/contentColumnTwo/0/imageBinary/git-tutorial-remote-repos.png",target="_blank")
        h3
          i.fa.fa-user.fa-2x.green
          | &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
          i.fa.fa-user.fa-2x.puple

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h4 
          i.fa.fa-star.red
          |  그 특별한 remote 이름
        h2.bullet origin
        br
        h4.bullet
          i.fa.fa-code-fork
          |  Branch에서 master의 역할과 같이 
          strong.red 기본(기준)
          | 이 되는 것

      section(data-bespoke-state='emphatic')
        h2 Remote를 통한 협업 과정
        h3 (그림을 그려가며..)
      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h2 
          i.fa.fa-cloud-upload.fa-2x
          br
          | Remote 관련 명령어
        pre.dark
          code.language-bash
            :markup
              git remote
              git remote -v
              git remote add <name> <url>
              git remote rm <name>
              git remote rename <old-name> <new-name>

      section(data-bespoke-state='emphatic')
        span.small_title.bullet 정리실습 3
        h2 
          i.fa.fa-cloud-upload.fa-2x
          br
          | Github에 올려보자!
        br
        pre.dark
          code.language-bash
            :markup
              git init
              git add README.md
              git commit -m "first commit"
              git remote add origin git@github.com:yomybaby/test.git
              git push -u origin master
        pre.dark
          code.language-bash
            :markup
              git remote add origin git@github.com:yomybaby/test.git
              git push -u origin master
      
      

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h2 
          i.fa.fa-cloud-download.fa-2x
          br
          | Fetch vs. Pull
        p.bullet Remote에 있는 내용를 전부 가져오는 행위는 동일
          br
          | Local branch랑 합치면 Pull (내 작업 Working Directory에 영향)

      section(data-bespoke-state='emphatic')
        span.small_title.bullet 정리실습 3
        h2 Fetch와 Pull을 직접 비교해보자
        ol
          li 먼저 github에서 수정하고
          li 수정한 내용 pull 해보고
          li 다시 github에서 수정하고
          li 수정한 내용 fetch 해보자

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h4 다른 사람이 이미 remote를 만든 경우
        h2 
          i.fa.fa-cloud-download.fa-2x
          br
          | Clone 해보자
        p Remote Repository를 내 local에다가 그대로 옮김
        pre.dark
          code.language-bash
            :markup
              git clone <repo>
              git clone <repo> <directory>

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h2 
          i.fa.fa-exclamation.fa-2x
          br
          | 이제 협업할 준비가 되었다!

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h2
          i.fa.fa-question.fa-4x
          br
          | 어떤 정책으로 협업 할 것인가?

      - smallTitle="Git Workflow"
      section(data-bespoke-state='reveal',data-bespoke-hash="workflow")
        h1
          i.fa.fa-group.fa-3x
        h3= smallTitle

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h4 Workflow = Branching 정책(전략)
        h2 다양한 정책들..
        ul.fa-ul
          li 
            i.fa.fa-group.fa-li
            | Centralized Workflow
          li
            i.fa.fa-group.fa-li
            | Feature Branch Workflow
          li
            i.fa.fa-group.fa-li
            | Gitflow Workflow
          li 
            i.fa.fa-group.fa-li
            | Forking Workflow

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle + " - Centralized Workflow"
        h4 
          i.fa.fa-group
          |  Branch 하나만 쓸께요.
        h2 Centralized Workflow
        div
          img(src="./images/11.svg")
          

      //- section(data-bespoke-state='emphatic')
      //-   span.small_title.bullet= smallTitle + " - Centralized Workflow"
      //-   h4 
      //-     i.fa.fa-group
      //-     |  Branch 하나만 쓸께요.
      //-   h2 Centralized Workflow
      //-   img.w300(src="https://www.atlassian.com/git/workflows/pageSections/00/contentFullWidth/0/tabs/00/pageSections/05/contentFullWidth/00/content_files/file1/document/git-workflow-svn-6.png")

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle + " - Feature Branch Workflow"
        h4 
          i.fa.fa-group
          |  개발 단위(기능) 별로 branch 만들께요.
        h2 Feature Branch Workflow
        img(src="./images/featured.svg")

      section(data-bespoke-state='emphatic',style="transition:none !important")
        span.small_title.bullet= smallTitle + " - Feature Branch Workflow"
        h4 
          i.fa.fa-group
          |  개발 단위(기능) 별로 branch 만들께요.
        h2 Feature Branch Workflow
        img(src="./images/featured-1.svg")

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle + " - Feature Branch Workflow"
        h4 
          i.fa.fa-group
          |  Feature Branch Workflow. 심플하고 자유롭다.
        h2.bullet 너무 자유로워서 관리의 어려움
        img.bullet(src="./images/toomanyfeatured.svg")

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle + " - Gitflow Workflow"
        h4 
          i.fa.fa-group
          |  개발서버(develop), 실서버(master) 구분할께요.
        h2 Gitflow Workflow
        p
          a(href="http://danielkummer.github.io/git-flow-cheatsheet/index.ko_KR.html",target="_blank") 한글설명
          | , &nbsp;
          a(href="https://www.atlassian.com/git/workflows#!workflow-gitflow",target="_blank") Atlassian 설명
        a(href="http://nvie.com/img/2009/12/Screen-shot-2009-12-24-at-11.32.03.png",target="_blank")
          img.w300(src="./images/gitflow.png")

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle + " - Gitflow Workflow"
        h4 
          i.fa.fa-group
          |  개발서버(develop), 실서버(master) 구분할께요.
        h2 
          a(href="https://github.com/nvie/gitflow",target="_blank") 
            | Gitflow Workflow
        h3 매번 git branch, checkout, merger,
          br
          | branch 삭제 등을 해야한다고요?
        br
        p.bullet.red 네, 하지만 우리는 도구를 사용하는 동물!

      section(data-bespoke-state='emphatic')
        h2 Gitflow 시연

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle + " - Forking Workflow"
        h4 
          i.fa.fa-group
          |  Remote Repository도 각각 따로 둘께요. 공식 Repository는 관리자만!
        h2 
          | Forking Workflow
        br
        i.fa.fa-star.fa-2x.blue
        img.w300(src="./images/fork.svg")
        p
          span.puple 개발자1
          | &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
          span 관리자
          | &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
          span.green 개발자2

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle + " - Forking Workflow"
        h4 
          i.fa.fa-group
          |  개발자1, 개발자2가 완료했다는 것을 관리자에게 어떻게 말해주지?
        h2.bullet
          i.fa.fa-github  
          i.fa.fa-bitbucket  
          |  Pull Request
        p.bullet 내 Repository의 이 Branch를
          br
          | 공식 Repository의 그 Branch에 Pull해주세요.
        img.w400.bullet(src="https://www.atlassian.com/git/images/tutorials/collaborating/making-a-pull-request/pull-request-7.png")

      section(data-bespoke-state='emphatic')
        h2 Pull Request 시연

      section(data-bespoke-state='emphatic')
        span.small_title.bullet 정리실습 4
        h2 Pull Request 해보자
        ol
          li 실습용 저장소 fork 하기
          li fork한 저장소 내 컴퓨터에 clone 하기
          li 수정해서 commit 하기
          li 내 원격 저장소에 push 하기
          li github에 들어가서 pull request 올리기

      section(data-bespoke-state='emphatic')
        span.small_title.bullet= smallTitle
        h2 Workflow를 위한 저장소 관리
        ul
          li Github
          li Bitbucket
          li Stash
          li Gitlab
          li Gitolite
          li Gitorious
          li tortoisegit
          li ..

      section(data-bespoke-state='reveal',data-bespoke-hash="wrapup")
        h3 가장 중요한 것은!
        h2.white
          i.fa.fa-heart.red
          |  Commit과 Branch의 이해!
        br
        p.white 미처 다루지 못한 내용 : rebase, hook, .bash_profile ..
        
      section(data-bespoke-state='red')
        h1 감사합니다.
        h2.white
          a(href="http://class.yostudio.kr",target="_blank").white class.yostudio.kr
        br
        h4.white
          | 강의 후에도 강의 관련 질문 및 요청사항은 
          a(href="http://class.yostudio.kr",target="_blank") class.yostudio.kr
          | 에 올려주세요.

      section(data-bespoke-state='emphatic', data-bespoke-hash="ref")
        span.small_title.bullet 부록 1
        h2 참고 자료 및 학습자료
        ul.fa-ul
          li
            i.fa-li.fa.fa-link
            a(href="http://atlassian.com/git",target="_blank") Atlassian Git Tutorials
          li
            i.fa-li.fa.fa-link
            a(href="http://wildlyinaccurate.com/a-hackers-guide-to-git",target="_blank") A Hacker’s Guide to Git
          li
            i.fa-li.fa.fa-link
            a(href="http://git-scm.com/book/ko",target="_blank") Pro Git
          li
            i.fa-li.fa.fa-link
            a(href="http://pismute.github.io/whygitisbetter/",target="_blank") Why Git is Better then X
          li
            i.fa-li.fa.fa-link
            a(href="http://www.insightbook.co.kr/wp-content/uploads/2013/04/git-%EC%B9%98%ED%8A%B8%EC%8B%9C%ED%8A%B8%ED%94%84%EB%A6%B0%ED%8A%B8.pdf",target="_blank") Git 작업 흐름과 명령어 (Cheet Sheet)
          li
            i.fa-li.fa.fa-link
            a(href="http://learnbranch.urigit.com/",target="_blank") Git Branch 배우기
            

    // build:js scripts/scripts.js
    script(src='bower_components/bespoke.js/dist/bespoke.min.js')
    script(src='bower_components/bespoke-keys/dist/bespoke-keys.min.js')
    script(src='bower_components/bespoke-touch/dist/bespoke-touch.min.js')
    script(src='bower_components/bespoke-bullets/dist/bespoke-bullets.min.js')
    script(src='bower_components/bespoke-scale/dist/bespoke-scale.min.js')
    script(src='bower_components/bespoke-hash/dist/bespoke-hash.min.js')
    script(src='bower_components/bespoke-progress/dist/bespoke-progress.min.js')
    script(src='bower_components/bespoke-state/dist/bespoke-state.min.js')
    script(src='bower_components/bespoke-forms/dist/bespoke-forms.min.js')
    script(src='bower_components/bespoke-tishadow/dist/bespoke-tishadow.js')
    script(src='bower_components/bespoke-run/dist/bespoke-run.js')
    //- script(src='bower_components/bespoke-jumpy/dist/bespoke-jumpy.js')
    //- script(src='bower_components/bespoke-dir/dist/bespoke-dir.js')
    script(src='bower_components/prism/prism.js')
    script(src='scripts/main.js')
    // endbuild
    script.
      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
      })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

      ga('create', 'UA-52540803-1', 'auto');
      ga('send', 'pageview');
    script.
      //var is_chrome = navigator.userAgent.toLowerCase().indexOf('chrome') > -1;
      //if(!is_chrome) alert('크롬 브라우져로 보시길 권장합니다.');
